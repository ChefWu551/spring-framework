<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.mountain"/>

    <aop:aspectj-autoproxy/>

    <!-- 注意：使用jdk proxy的时候，切点应该是代理对象而不是实际对象，否则切面失效！！！-->
    <bean id="myAspect" class="com.mountain.aspect.MyAspect"/>

    <aop:config>
        <aop:aspect id="myAspect" ref="myAspect">
            <aop:pointcut id="pointCut" expression="execution(int com.mountain.service.Calculator.*(int, int))"/>
            <aop:before pointcut-ref="pointCut" method="beforeCalculate"/>
            <aop:after-returning pointcut-ref="pointCut" method="afterReturningCalculate" returning="result"/>
            <aop:after pointcut-ref="pointCut" method="afterCalculate"/>
            <aop:after-throwing pointcut-ref="pointCut" method="afterThrowingCalculate" throwing="exception"/>
        </aop:aspect>
    </aop:config>
</beans>